{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,qB,I,G,E,E,O,C,kB,I,GCGA,IAAM,EAAU,CACd,OAAQ,MACR,QAAS,CACP,OAAQ,mBACR,cAAe,4NACjB,CACF,EAEa,EAAqB,AAAA,GAChC,MAAM,CAAC,+DAA+D,EAAE,EAAK,CAAC,CAAE,GAC7E,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,KAAK,CAAC,AAAA,GAAO,QAAQ,KAAK,CAAC,IAEnB,EAAkB,AAAA,GAC7B,MAAM,CAAC,mCAAmC,EAAE,EAAG,eAAe,CAAC,CAAE,GAC9D,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,KAAK,CAAC,AAAA,GAAO,QAAQ,KAAK,CAAC,G,G,I,E,E,SElBhC,MAAM,EAAc,SAAS,aAAa,CAAC,kBAErC,EAAc,UAClB,IAAM,EAAmB,aAAa,OAAO,CAAC,WACxC,EAAc,SAAS,aAAa,CAAC,mBAC3C,CAAA,EAAY,KAAK,CAAC,OAAO,CAAG,OAC5B,EAAY,KAAK,CAAC,OAAO,CAAG,OACxB,EAIF,QAAQ,GAAG,CAAC,AAHI,KAAK,KAAK,CAAC,GAGP,GAAG,CAAC,AAAA,GAAS,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAM,EAAE,IACtD,IAAI,CAAC,AAAA,IACJ,IAAM,EAAe,EAClB,GAAG,CAAC,AAAA,IACH,IAAM,EAAS,EAAM,MAAM,CAAC,GAAG,CAAC,AAAA,GAAS,EAAM,IAAI,EAAE,IAAI,CAAC,MAC1D,MAAO,CAAC;;yBAEK,EAAE,EAAM,WAAW,CAAC,iBAAiB,EAAE,EAAM,EAAE,CAAC;4DACb,EAAE,EAAM,WAAW,CAAC,OAAO,EACzE,EAAM,KAAK,CACZ;;;;uBAIU,EAAE,EAAM,KAAK,CAAC;;;;yBAIZ,EAAE,EAAO,GAAG,EAAE,EAAM,YAAY,CAAC,KAAK,CAAC,EAAG,GAAG;;;;;iBAKrD,CAAC,AACR,GACC,IAAI,CAAC,GAER,CAAA,EAAY,SAAS,CAAG,CAC1B,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,IAEhC,EAAY,SAAS,CAAG,2FAE5B,EAGA,AAD0B,SAAS,aAAa,CAAC,kCAC/B,gBAAgB,CAAC,QAAS,G,I,E,E,SC/C5C,MAAM,EAAc,SAAS,aAAa,CAAC,oBAErC,EAAa,UACjB,IAAM,EAAmB,aAAa,OAAO,CAAC,SACxC,EAAc,SAAS,aAAa,CAAC,iBAC3C,CAAA,EAAY,KAAK,CAAC,OAAO,CAAG,OAC5B,EAAY,KAAK,CAAC,OAAO,CAAG,OAExB,EAIF,QAAQ,GAAG,CAAC,AAHE,KAAK,KAAK,CAAC,GAGP,GAAG,CAAC,AAAA,GAAS,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAM,EAAE,IACpD,IAAI,CAAC,AAAA,IACJ,IAAM,EAAe,EAClB,GAAG,CAAC,AAAA,IACH,IAAM,EAAS,EAAM,MAAM,CAAC,GAAG,CAAC,AAAA,GAAS,EAAM,IAAI,EAAE,IAAI,CAAC,MAC1D,MAAO,CAAC;;uBAEG,EAAE,EAAM,WAAW,CAAC,iBAAiB,EAAE,EAAM,EAAE,CAAC;0DACb,EAAE,EAAM,WAAW,CAAC,OAAO,EACvE,EAAM,KAAK,CACZ;;;;qBAIQ,EAAE,EAAM,KAAK,CAAC;;;;uBAIZ,EAAE,EAAO,GAAG,EAAE,EAAM,YAAY,CAAC,KAAK,CAAC,EAAG,GAAG;;;;;eAKrD,CAAC,AACN,GACC,IAAI,CAAC,GAER,CAAA,EAAY,SAAS,CAAG,CAC1B,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,IAEhC,EAAY,SAAS,CAAG,2FAE5B,EAGA,AADyB,SAAS,aAAa,CAAC,gCAC/B,gBAAgB,CAAC,QAAS","sources":["<anon>","src/js/fetchMovies.js","src/library.js","src/js/watchedLibrary.js","src/js/queuedLibrary.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"f4Zwh\", function(module, exports) {\n\n$parcel$export(module.exports, \"fetchPopularMovies\", () => $afa6f33e6291a2a1$export$225b489b0d997c20);\n$parcel$export(module.exports, \"fetchMoviesByID\", () => $afa6f33e6291a2a1$export$afa647190394e6f5);\nconst $afa6f33e6291a2a1$var$apiKey = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlN2M5MzBkOWVlMjFkYTk0ZjhmYzMyNTdkMzg3ZWNlZCIsInN1YiI6IjY1ZTlhZDJhNmEyMjI3MDE4Njk2NTExNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j1C6buHnPvlB2eInbvledvTmiFFIKSym7oMjouLo9AE\";\nconst $afa6f33e6291a2a1$var$options = {\n    method: \"GET\",\n    headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${$afa6f33e6291a2a1$var$apiKey}`\n    }\n};\nconst $afa6f33e6291a2a1$export$225b489b0d997c20 = (page)=>fetch(`https://api.themoviedb.org/3/movie/popular?language=en-US&page=${page}`, $afa6f33e6291a2a1$var$options).then((response)=>response.json()).catch((err)=>console.error(err));\nconst $afa6f33e6291a2a1$export$afa647190394e6f5 = (id)=>fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, $afa6f33e6291a2a1$var$options).then((response)=>response.json()).catch((err)=>console.error(err));\n\n});\n\n\nvar $f4Zwh = parcelRequire(\"f4Zwh\");\nconst $6e333127fc2b34a4$var$moviesListQ = document.querySelector(\".library-queue\");\nconst $6e333127fc2b34a4$var$showWatched = async ()=>{\n    const moviesInStorageW = localStorage.getItem(\"watched\");\n    const moviesListW = document.querySelector(\".library-watched\");\n    $6e333127fc2b34a4$var$moviesListQ.style.display = \"none\";\n    moviesListW.style.display = \"flex\";\n    if (moviesInStorageW) {\n        const watched = JSON.parse(moviesInStorageW);\n        // Tworzenie markupu dla każdego filmu\n        Promise.all(watched.map((movie)=>(0, $f4Zwh.fetchMoviesByID)(movie.id))).then((movieDetails)=>{\n            const moviesMarkup = movieDetails.map((movie)=>{\n                const genres = movie.genres.map((genre)=>genre.name).join(\", \");\n                return `<li class=\"movie-card\">\n              <div class=\"card\">\n                <a href=\"${movie.poster_path}\" data-movie-id=\"${movie.id}\">\n                  <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\"/>\n                </a>\n                <div class=\"info\">\n                  <p class=\"info-item\">\n                    <b>${movie.title}</b>\n                  </p>\n                  <div class=\"details\">\n                    <p class=\"info-item\">\n                      <b>${genres} | ${movie.release_date.slice(0, 4)}</b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </li>`;\n            }).join(\"\");\n            moviesListW.innerHTML = moviesMarkup;\n        }).catch((error)=>console.error(error));\n    } else moviesListW.innerHTML = `<img src=\"https://i.pinimg.com/originals/4a/06/ef/4a06efb5a2f39feaa2f81b9f3d179a94.gif\"/>`;\n};\nconst $6e333127fc2b34a4$var$showWatchedButton = document.querySelector(\".header-library-button-watched\");\n$6e333127fc2b34a4$var$showWatchedButton.addEventListener(\"click\", $6e333127fc2b34a4$var$showWatched);\n\n\n\nvar $f4Zwh = parcelRequire(\"f4Zwh\");\nconst $1878529db6c2c6ac$var$moviesListW = document.querySelector(\".library-watched\");\nconst $1878529db6c2c6ac$var$showQueued = async ()=>{\n    const moviesInStorageQ = localStorage.getItem(\"queue\");\n    const moviesListQ = document.querySelector(\".library-queue\");\n    $1878529db6c2c6ac$var$moviesListW.style.display = \"none\";\n    moviesListQ.style.display = \"flex\";\n    if (moviesInStorageQ) {\n        const queue = JSON.parse(moviesInStorageQ);\n        // Tworzenie markupu dla każdego filmu\n        Promise.all(queue.map((movie)=>(0, $f4Zwh.fetchMoviesByID)(movie.id))).then((movieDetails)=>{\n            const moviesMarkup = movieDetails.map((movie)=>{\n                const genres = movie.genres.map((genre)=>genre.name).join(\", \");\n                return `<li class=\"movie-card\">\n            <div class=\"card\">\n              <a href=\"${movie.poster_path}\" data-movie-id=\"${movie.id}\">\n                <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\"/>\n              </a>\n              <div class=\"info\">\n                <p class=\"info-item\">\n                  <b>${movie.title}</b>\n                </p>\n                <div class=\"details\">\n                  <p class=\"info-item\">\n                    <b>${genres} | ${movie.release_date.slice(0, 4)}</b>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </li>`;\n            }).join(\"\");\n            moviesListQ.innerHTML = moviesMarkup;\n        }).catch((error)=>console.error(error));\n    } else moviesListQ.innerHTML = `<img src=\"https://i.pinimg.com/originals/4a/06/ef/4a06efb5a2f39feaa2f81b9f3d179a94.gif\"/>`;\n};\nconst $1878529db6c2c6ac$var$showQueuedButton = document.querySelector(\".header-library-button-queue\");\n$1878529db6c2c6ac$var$showQueuedButton.addEventListener(\"click\", $1878529db6c2c6ac$var$showQueued);\n\n\n\n\n//# sourceMappingURL=library.4c834f4b.js.map\n","const apiKey =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlN2M5MzBkOWVlMjFkYTk0ZjhmYzMyNTdkMzg3ZWNlZCIsInN1YiI6IjY1ZTlhZDJhNmEyMjI3MDE4Njk2NTExNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j1C6buHnPvlB2eInbvledvTmiFFIKSym7oMjouLo9AE';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  },\n};\n\nexport const fetchPopularMovies = page =>\n  fetch(`https://api.themoviedb.org/3/movie/popular?language=en-US&page=${page}`, options)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n\nexport const fetchMoviesByID = id =>\n  fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n","import './js/watchedLibrary';\nimport './js/queuedLibrary';\n","import { fetchMoviesByID } from './fetchMovies';\nconst moviesListQ = document.querySelector('.library-queue');\n\nconst showWatched = async () => {\n  const moviesInStorageW = localStorage.getItem('watched');\n  const moviesListW = document.querySelector('.library-watched');\n  moviesListQ.style.display = 'none';\n  moviesListW.style.display = 'flex';\n  if (moviesInStorageW) {\n    const watched = JSON.parse(moviesInStorageW);\n\n    // Tworzenie markupu dla każdego filmu\n    Promise.all(watched.map(movie => fetchMoviesByID(movie.id)))\n      .then(movieDetails => {\n        const moviesMarkup = movieDetails\n          .map(movie => {\n            const genres = movie.genres.map(genre => genre.name).join(', ');\n            return `<li class=\"movie-card\">\n              <div class=\"card\">\n                <a href=\"${movie.poster_path}\" data-movie-id=\"${movie.id}\">\n                  <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${\n              movie.title\n            }\"/>\n                </a>\n                <div class=\"info\">\n                  <p class=\"info-item\">\n                    <b>${movie.title}</b>\n                  </p>\n                  <div class=\"details\">\n                    <p class=\"info-item\">\n                      <b>${genres} | ${movie.release_date.slice(0, 4)}</b>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </li>`;\n          })\n          .join('');\n\n        moviesListW.innerHTML = moviesMarkup;\n      })\n      .catch(error => console.error(error));\n  } else {\n    moviesListW.innerHTML = `<img src=\"https://i.pinimg.com/originals/4a/06/ef/4a06efb5a2f39feaa2f81b9f3d179a94.gif\"/>`;\n  }\n};\n\nconst showWatchedButton = document.querySelector('.header-library-button-watched');\nshowWatchedButton.addEventListener('click', showWatched);\n","import { fetchMoviesByID } from './fetchMovies';\nconst moviesListW = document.querySelector('.library-watched');\n\nconst showQueued = async () => {\n  const moviesInStorageQ = localStorage.getItem('queue');\n  const moviesListQ = document.querySelector('.library-queue');\n  moviesListW.style.display = 'none';\n  moviesListQ.style.display = 'flex';\n\n  if (moviesInStorageQ) {\n    const queue = JSON.parse(moviesInStorageQ);\n\n    // Tworzenie markupu dla każdego filmu\n    Promise.all(queue.map(movie => fetchMoviesByID(movie.id)))\n      .then(movieDetails => {\n        const moviesMarkup = movieDetails\n          .map(movie => {\n            const genres = movie.genres.map(genre => genre.name).join(', ');\n            return `<li class=\"movie-card\">\n            <div class=\"card\">\n              <a href=\"${movie.poster_path}\" data-movie-id=\"${movie.id}\">\n                <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${\n              movie.title\n            }\"/>\n              </a>\n              <div class=\"info\">\n                <p class=\"info-item\">\n                  <b>${movie.title}</b>\n                </p>\n                <div class=\"details\">\n                  <p class=\"info-item\">\n                    <b>${genres} | ${movie.release_date.slice(0, 4)}</b>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </li>`;\n          })\n          .join('');\n\n        moviesListQ.innerHTML = moviesMarkup;\n      })\n      .catch(error => console.error(error));\n  } else {\n    moviesListQ.innerHTML = `<img src=\"https://i.pinimg.com/originals/4a/06/ef/4a06efb5a2f39feaa2f81b9f3d179a94.gif\"/>`;\n  }\n};\n\nconst showQueuedButton = document.querySelector('.header-library-button-queue');\nshowQueuedButton.addEventListener('click', showQueued);\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$afa6f33e6291a2a1$export$225b489b0d997c20","$afa6f33e6291a2a1$export$afa647190394e6f5","$afa6f33e6291a2a1$var$options","method","headers","accept","Authorization","page","fetch","then","response","json","catch","console","error","$f4Zwh","$6e333127fc2b34a4$var$moviesListQ","document","querySelector","$6e333127fc2b34a4$var$showWatched","moviesInStorageW","localStorage","getItem","moviesListW","style","display","Promise","all","watched","JSON","parse","map","movie","fetchMoviesByID","movieDetails","moviesMarkup","genres","genre","name","join","poster_path","title","release_date","slice","innerHTML","$6e333127fc2b34a4$var$showWatchedButton","addEventListener","$1878529db6c2c6ac$var$moviesListW","$1878529db6c2c6ac$var$showQueued","moviesInStorageQ","moviesListQ","queue","$1878529db6c2c6ac$var$showQueuedButton"],"version":3,"file":"library.4c834f4b.js.map"}